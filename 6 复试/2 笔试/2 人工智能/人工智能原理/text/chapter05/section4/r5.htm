<html>
<head>
<title>人工智能原理</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
</head>
<body bgcolor="#FFFFFF" class="bg">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td class=text> 
      <p>　　1 <b>按搜索方法分类</b>：也就是搜索规则空间的方法，可分为数据驱动方法和模型驱动方法。主要有：变形空间法、改进假设法、产生与测试法、方案示例法。<br>
        　　学习的最终目的是为了搜索，有了假设空间H的基础，在该空间中进行搜索。改进假设空间的假设规则集，以便得到所要求的规则。下面介绍几种搜索规则空间的方法。这些方法都具有一个假设规则集合H，不同的仅仅是对H的改进方法。 
      <ul>
        <li>变型空间法：变型空间法（version-space method）是一种数据驱动方法（data-driven method）。这种方法对规则和实例都采用同一种表示形式。初始的假设规则集H包括满足第一个示教例子和全部规则。在得到下一个示教例子时，对集合H进行一般化或特殊化处理，最后使集合H收敛为仅含要求的规则。</li>
        <li>改进假设法：改进假设法（hypothesis-refinement method）也是一种数据驱动方法。这种方法表示规则和实例的形式不统一。程序根据例子选择一种操作，用该操作去改进假设规则集H中的规则。 
        <li>产生与测试法：产生与测试法（generate and test）是一种模型驱动方法（model-driven method）。这种方法针对示教例子反复产生和测试假设的规则。在产生假设规则时，使用基于模型的知识，以便只产生可能合理的假设。</li> 
        <br>
        <li>方案示例法：方案示例法（schema instantiation）也是一种模型驱动方法。该方法使用规则方案的集合来约束可能合理的规则的形式，其中最符合示教例子的规则方案被认为是最合理的规则。 </li></ul>
          　　数据驱动方法的优点是可以逐步接受示教例子，以渐进方式学习，特别是变型空间法，它很容易修改集合H，不要求程序回溯就可以考虑新的实例。<br>
      　　模型驱动方法难以逐步学习，它是通过检查全部实例来测试假设。在使用新假设时，它必须回溯或重新搜索规则空间。因为原来对假设的测试已不适用于新实例加入后的情况。<br>
      　　模型驱动方法的优点是抗干扰性良好。由于使用整个实例集合，程序就可以对假设进行统计测量。在用错误实例测试假设时，它不因一、二个错误实例而放弃正确的假设。而数据驱动方法用当前新的实例去修改集合H，因此一个错误实例就会造成集合H的混乱。解决的方法是每次用新实例去修改集合H时，只作较小的修改，这样可以减少错误实例带来的影响，当然这也同时使得学习的进程变慢了。</td>
  </tr>
</table>
</body>
</html>
