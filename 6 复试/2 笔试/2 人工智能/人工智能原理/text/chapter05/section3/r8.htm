<html>
<head>
<title>人工智能原理</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
</head>
<body bgcolor="#FFFFFF" class="bg">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td class=text> 
      <p>　　<b>给定</b>：领域知识、目标概念、训练实例和操作性准则。<br>
        　　<b>找出</b>：满足操作性准则的关于目标概念的充分条件。<br>
        　　其中，领域知识是描述相应领域的事实和规则，在学习系统中作为背景知识，系统用它来证明训练实例为什么可作为目标概念的实例；目标概念就是要学习的概念；训练实例是为解释学习提供的一个或可数的几个例子，解释学习正是从该例出发，通过运用领域知识进行证明，最终推广出目标概念的描述；操作性准则用于指明哪些测试在运行时容易判定，指导系统对描述目标的概念进行取舍。整个过程为目标引导，反向推理。<br>
        　　<font color="#0000FF">注意</font>：解释学习与实例学习不同，解释学习分析的是一个或少数几个例子，加上知识库做出解释。而实例学习分析的是一个样本集，一堆例子。解释学习起源于经验学习，用存储结构保存过程，用符号来标记存储结构模型的方法。存储块叫做chunk。<br>
        　　解释学习的学习过程分为两步：首先运用领域知识找出训练实例为什么是目标概念的证明（即解释），然后按操作性准则对解释进行推广，从而得出关于目标概念的学习描述。学习描述既是训练实例的一般化，又是目标概念的特例。学习的目的就是要产生这样的学习描述，作为目标概念的有效识别器。<br>
        　　求解问题时从知识库中寻求规则，然后进一步对规则进行分解推理，反复进行，直到求解结束。总的概念是目标引导、反向推理。过程可以表示为：<br>
        　　目标问题 → 规则一 → 子目标问题 → 规则二 →。。。<br>
        　　目标问题称为“前件”，规则称为“后件”。该方法的学习过程也可以理解为前件、后件的反复转化过程，即前件 → 后件， 而该“后件”又将成为下一个推导的“前件”，周而复始。<br>
        　　得到解便可证明该例子的目标可满足，并获得了证明的因果解释结构。<br>
        　　产生的解释结构的方法有2种：<br>
        　　1 所有的算子构成动作序列，作为解释结构<br>
        　　2 自顶向下的遍历证明树结构<br>
        　　为了证明该例子满足目标概念，根据知识库中已有的事实和规则分解目标，直到求解结束。一旦得到解，便完成了该问题的证明，同时也获得了一个解释结构。解释的构造可以在问题求解的同时进行，也可以在问题求解后进行。</p>
    </td>
  </tr>
</table>
</body>
</html>
