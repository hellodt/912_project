<html>
<head>
<title>人工智能原理</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
</head>
<body bgcolor="#FFFFFF" class="bg">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td class=text> 　　<strong>表示知识的范围是否广泛</strong><br>
      　　例如，数理逻辑表示是一种广泛的知识表示办法，如果单纯用数字表示，则范围就有限制。<br>
      　　<strong>是否适于推理</strong><br>
      　　人工智能只能处理适合推理的知识表示，因此所选用的知识表示必须适合推理。数学模型（拉格朗日插值法）适合推理，普通的数据库只能供浏览检索，但不适合推理。<br>
      　　<strong>是否适于计算机处理</strong><br>
      　　计算机只能处理离散的、量化的byte字节流。因此，用文字表述的知识和连续形式表示的知识（如微分方程）不适合计算机处理。<br>
      <strong>　　是否有高效的求解算法</strong><br>
      　　考虑到实用的性能，必须有高效的求解算法，知识表示才有意义。 <br>
      　　<strong>能否表示不精确知识</strong><br>
      　　自然界的信息具有先天的模糊性和不精确性，能否表示不精确知识也是考虑的重要因素。许多知识表示方法往往要经过改造，如确定性方法、主观贝叶斯方法等对证据和规则引入了不确定性度量，就是为了表达不精确的知识。<br>
      　　<strong>能否在同一层次上和不同层次上模块化</strong><br>
      　　例如PROLOG只有一个全局知识库，不能模块化，这是它的缺点。<br>
      　　<strong>知识和元知识能否用统一的形式表示</strong><br>
      　　知识和元知识是属于不同层次的知识，使用统一的表示方法可以使知识处理简单。产生式表示法就能比较方便的表示这两种层次的知识。<br>
      　　<strong>是否适合于加入启发信息</strong><br>
      　　在已知的前提下，如何最快的推得所需的结论，以及如何才能推得最佳的结论，我们的认识往往是不精确的。因此，往往需要在元知识（控制知识）加入一些控制信息，也就是通常所说的启发信息。<br>
      　　<strong>过程性表示还是说明性表示</strong><br>
      　　一般认为，说明性的知识表示涉及细节少，抽象程度高，因此可靠性好，修改方便，但执行效率低。过程性知识表示的优缺点与说明性知识表示的相反。<br>
      　　<strong>表示方法是否自然</strong><br>
      　　一般在表示方法尽量自然和使用效率之间取得一个折中。比如，对于推理来说，ＰＲＯＬＯＧ比高级语言如Visual C++自然，但显然牺牲了效率。</td>
  </tr>
</table>
</body>
</html>
