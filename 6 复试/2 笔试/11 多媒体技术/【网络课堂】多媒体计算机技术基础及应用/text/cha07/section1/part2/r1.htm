<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<table width="100%" border="0" cellspacing="3" cellpadding="3">
  <tr> 
    <td class="text"> 　　多媒体著作工具作为一类特定用途的程序，并没有具体的设计标准，因此，目前可见到的千百种著作工具的著作方式多种多样，但归纳起来可分为下列三大类：基于流程图的、基于卡片的、基于语言的。<br>
      　　基于流程图的工具功能强大，例如Authorware和IconAuthor，将程序的基本结构和多媒体的操作封装成图符（icon），用户将这些图符拖动到工作区建立流程图，系统编译后就形成了应用程序。由于使用这类工具的过程就是设计程序流程图的过程，要求用户有相当的程序设计经验。<br>
      在多媒体应用中，展现在观众面前的往往是一个个的屏幕显示，每一屏显示可看做一张卡片或一段场景，在这些卡片上，用户可以&quot;联想&quot;的方式通过选择按钮等操作进入到另一张卡片中，这就是所谓的超连接的结构。基于卡片的著作工具就是按照这种思想设计的，例如Action!，它提供给用户工具箱和时间轴，让用户直观地编辑卡片内的多媒体内容，操作直观而简便。但在这些工具的卡片内，一般是一段按时间流顺序播放的多媒体演示，卡片内的对象均基于时间，不能按用户交互的结果作动态的调度，多适用于商业展示系统。<br>
      　　基于语言的著作工具是为多媒体对象的操作设计了面向对象的操作语言，例如ToolBook著作工具中的OpenScript语言，这样的语言容易理解，用户不用操心程序的细节。但要掌握这类语言，也需要较长时间的学习和培训。<br>
      <br>
      　　<font color="#003399">多媒体著作工具可以分成四类：</font><br>
      　　(1) 基于流程图的多媒体著作工具，它的特点是把操作封装到图符中(icon)，将图符拖到工作区，建立流程图，编译得到多媒体的应用程序，它的代表产品是Authorware 
      和Icon Author。<br>
      　　(2) 基于卡片的多媒体著作工具，它的特点是把每个显示屏幕看成是一个卡片，利用联想办法，通过超媒体链把它们链接起来，组成多媒体应用系统。它的代表产品是Action！和Hypercard。<br>
      　　(3) 基于语言的多媒体著作工具，它的特点是按书的结构组织应用程序，每一屏被描述为一页，在每页内有多级对象，它们被进一步分为前景和背景，背景的设置在用户想生成的一系列页中共享一些通用元素。它采用Open 
      Script语言。代表产品是Tool Book。<br>
      　　(4) 基于事件驱动的多媒体著作工具，它的特点是建立一个事件驱动的超媒体模型EDHM(Event Driver Hypermedia Model)，通过事件驱动解决同步和交互问题。它的代表产品是Ark。 
      <br>
      　　下面简要介绍几个有代表性的著作工具的特点。<br>
      　　<font color="#003399"><b>一、Authorware Professional for Windows</b></font><a name="01"></a><br>
      <b><font color="#003399">　　 7-1 
      Authorware Professional</font></b> <br>
      　　<img src="../../../../images/chatp/chap07/002.gif" width="304" height="225"> 
      <br>
      　　Authorware Professional 的著作环境主要是由11个图符组成的图符界面，这些图符用来操作媒体和设置应用程序的逻辑，它们是：<br>
      　　・Display：将文本和图形放在屏幕上；<br>
      　　・Animation：在屏幕上沿直线或曲线路径移动图像；<br>
      　　・Erase：将屏幕上的项去掉；<br>
      　　・Wait、Decision、Interaction：控制应用程序的流程，包括分支、循环和延时；<br>
      　　・Calculation：完成数学计算，管理系统变量，也可用来调用包括用户定义的过程在内的特殊函数，或跳到其它文件或应用程序；<br>
      　　・Map：将流程图的一段紧缩为一个单独的图符；<br>
      　　・Movie、Sound、Video：操作多媒体对象，还可用在不被多媒体Windows支持的外设上。<br>
      　　这11个图符很小，并且是黑白的，这种精简的形象化表示却具有强大的功能。其工作方式是通过选择这些图符构成应用程序的流程图来制作产品。<br>
      　　Authorware不提供滚动条，故所设计的流程图不超过一屏，但这并不妨碍用户插入更多的图符，这是因为有Map icon的缘故，它是Authorware能够生成含标准组件的应用程序的强有力的工具。在制作过程中，可将流程图中的一段紧缩为一个单独的图符，方法是指定一段流程图，再在屏幕左边选Map 
      icon，即完成紧缩；需要查看其内容时，在这个图符上连按两下就打开一个新窗口释放该图符的内容。这不仅方便用户概要地观察自己的应用程序，重要的是它可生成标准的组件存起来，可在其它应用程序中复用。因此，Authorware要求用户仅操作一个大的应用程序的小的、可管理的部分，而非同时管理所有细节，这种方式更有利于应用程序的开发。<br>
      　　Authorware的另一独特性能是可将一应用程序编译为一个独立的、可在Windows下运行的.exe文件。<br>
      　　Authorware Professional的售价很高，是一个产业级的著作工具；它易学，无需编程，便于制作和管理。由于按流程图的方式制作，要求用户有一定的程序设计经验。<br>
      　　<b><font color="#003399">二、IconAuthor</font></b><a name="02"></a><br>
      　　与Authorware一样，IconAuthor也采用一种形象化的方法在PC上制作多媒体产品，其过程是先建立结构（即流程图），再往结构中添加内容。IconAuthor的图符有50个之多。<br>
      　　例如，若应用程序需要在屏上显示一图像，就在屏幕左边的滚动条上选Display icon，将它拖到工作区后放下；还可加一个Input icon让应用程序在进行到下一步之前等待按键。这个过程自动地将所添加的图符连接成应用程序的形象化流程图。流程图上可继续添加新图符或删除图符，也可把一段图定义为一个块，进行删除、拷贝、拼贴等块操作。<br>
      　　流程图定义了多媒体元素的流动过程。在图符上添加内容时，在该图符上连点两下，就可打开一对话盒，定义诸如暂停时间长度、启动下一活动的事件类等内容。 
      <br>
      　　IconAuthor有足够的工具用来开发交互式应用程序。IconAuthor的50个图符表示为7个功能组，用纸夹表示，它们分别是：Flow、Input、Output、Data、Multimedia、Custom和Extensions：<br>
      　　・Flow夹包括典型的程序流控制的图符，如menus、if-then branches和loops；<br>
      　　・Input图符可用于设计配合用户输入的应用程序<br>
      　　・Output图符则管理在屏幕上显示图像、图形、文本，和在打印机或硬盘上输出等；<br>
      　　・Data夹含有管理变量的图符，如读写磁盘文件上的值，处理dBase文件和变量系统；<br>
      　　・Multimedia夹不仅包含支持多媒体Windows的图符，其中对多媒体Windows的支持仅有一个MCI icon，其它图符处理IconAuthor直接支持的视频和音频功能；<br>
      　　・Custom夹包含一组预制的MCI程序，可用于添加访问CD-audio，MIDI和Waveform音频元素的序列；<br>
      　　・Extensions夹包含的图符有下列功能：DDE和DLL支持，控制通过串行口的扩展外设和管理子程序。<br>
      　　在开发应用程序的过程中，IconAuthor的菜单选项还提供很有帮助的工具。例如，可用Zoom来移进移出流程图，若流程图较屏幕过宽或过长的话，就会出现滚动条；开发时还可在同时打开一个以上的应用程序流程图，两个窗口之间可进行图符块的拷贝、拼贴。<br>
      　　Aim Tech提供一个运行时模式供应用程序运行时使用。<br>
      　　IconAuthor无疑是一个高级的、功能丰富的著作工具。由于它价格也相对高，适合有大量应用程序开发的大单位使用。IconAuthor也同样要求用户有一定的程序设计经验。<br>
      　　<b><font color="#003399">三、Action!</font></b><a name="03"></a><br>
      　　与前两个著作工具截然不同，Action!是一个典型的基于场景设计（即基于卡片的）的著作工具。Action!的用户界面十分友好，很容易掌握。用Action!制作的多媒体应用程序称为作品，作品由一幕幕的场景（scence）构成，场景的展现顺序由用户定义，场景之间是一种超连接的关系。<br>
      　　在它的工具箱中，列出了能加到场景中的对象（Object），包括：文本、图形、图表、声音、动画和视频等。特别要指出的是，象文本、图形、图表这样的静态对象，在Action!中可以被施以动作，达到眩目的视觉效果，例如：用户可以定义一段文字以某种特技动作进入场景、以什么方式显示在屏幕上，还可以定义文字退出场景时的特技动作。此特性可以令用户制作出更为生动有趣的作品，这也许是该工具所以被成为Action!的原因吧。<br>
      　　此外，在场景中还可以加入交互类对象，如按钮，这样就能够让最终的用户自己控制演示过程，这在制作培训/教育类的应用程序时是十分必要的。<br>
      　　多媒体应用程序所要解决的一个重要问题是如何定义多媒体对象间的时序关系，Action!很好地解决了这一问题。在Action!中有一个叫做&quot;Timeline&quot;（时间轴）的窗口，它是用来直观地编辑多媒体对象间的时序关系的。窗口中每一个矩形代表一个多媒体对象，矩形左边代表该对象进入时间，右边代表退出时间。在作品播放过程中，若某个对象的进入时间到了，就开始播放这个对象，若退出时间到了，就停止播放这个对象，用户可以在时间轴上拖动对象来定义对象出现的时序。<br>
      　　<b><font color="#003399">四、ToolBook</font></b><a name="04"></a><br>
      　　ToolBook是一个高水平的基于Windows的编程环境，是制作超文本应用的良好工具。Multimedia ToolBook是美国Asymetrix公司推出的ToolBook的扩充版，主要是利用多媒体Windows，加入了访问CD-ROM、sound、video、animator 
      files的命令。<br>
      　　开始使用Multimedia ToolBook时，会感到其界面相当容易，但要掌握其机理就颇费一番功夫。其基本概念是：在屏幕上画出各种各样的对象，然后生成潜在的&quot;脚本&quot;--它在一给定对象以某种方式被选中或触发时引发一个或多个结果。这些脚本事实上是用OpenScript写的小段程序，OpenScript是ToolBook的编程语言。<br>
      　　Multimedia ToolBook按书的结构组织应用程序，每一屏被描述为一页，在每页内可有多级的对象，它们被进一步分为前景和背景，背景的设置在用户想使生成的一系列页（屏）共享一些通用元素，如一个图像或象Next、Quit这样的命令按钮时，会显得很方便、有用。<br>
      　　举个例子，应用程序中有一段是：按一个按钮后程序进到下一页，用MultimediaToolBook的著作过程是：１）生成一个铵钮，可简单地从工具盒中选Button工具，将它画到屏幕上，然后编辑此对象（按钮）的性能／参数，包括按钮的类型（三维、阴影等）和用以标记按钮的其上面的文字；２）为按钮建一脚本，用Button 
      Up句柄来触发此脚本运行，脚本如下： <br>
      　　to handle Button Up<br>
      　　send next<br>
      　　end Button Up<br>
      　　此脚本很简单，复杂的要写好几屏。<br>
      　　Multimedia ToolBook擅长超文本应用，因为它有生成热词等的特殊性能。因为有热词，在一页的文本中选一个单词或词组并为它写一脚本，就可制作可触发术语的弹出式解释这种形式的应用程序。<br>
      　　Multimedia ToolBook提供通过MCI函数调用对多媒体Windows性能的访问，但必须了解和理解它们，因为必须在脚本里写有关调用，且无提示，况且语法和序列也不全是直观的。<br>
      　　因为需要掌握OpenScript，这点会使非程序员怯步。<br>
      　　ToolBook也有一运行时软件包。<br>
      　　Multimedia ToolBook是一个灵活、通用的开发系统，面向那些懂一点编程但又不愿花时间用Ｃ那样完整的语言的人。<br>
      　　<b><font color="#003399">五、Ark</font></b><a name="05"></a><br>
      　　清华大学计算机科学与技术系承担的有关国家科技攻关任务涉及到多媒体著作工具的研究，先后研制出DOS、Windows3.1和Windows95环境下的著作工具，其中96年研制的PWindows95下的著作工具Ark在数据管理、对象同步、用户界面等方面有着较为充分的考虑。<br>
      　　Ark首先应用于国家八五科技攻关成果多媒体演示系统的制作。八五结束前夕，按以往（如七五结束时）的做法，将举办大型展览会进行成果汇报，这种做法耗资巨大，前往参观的人数和展览持续的时间都很有限，因此，国家计委决定采用多媒体技术作八五攻关成果展示。该系统工期短（96年2月～96年9月）、数据量巨大（100GB以上）、演示质量要求高、内容变化大（随时根据领导意图、创意要求等作修改），现有著作工具的许多固有缺陷也难以用于开发这样的大型演示系统，Ark很好地满足了这些特定要求，成为该系统的核心开发工具。<br>
      　　超媒体结构能够直接反映人类联想式思维的特点，Ark就是基于超媒体模型设计的，演示内容以&quot;页&quot;为单位组织起来，它相当与超媒体结构中的&quot;节点&quot;，没有时间和容量的限制；一页就相当于一个容器，里面包含一个对象链表、背景信息和链接关系信息。对象链表是页中最重要的数据结构，上面挂着一些数据对象和控制对象；背景信息包括背景的样式、颜色等；链接关系信息是一个指针，指明本页播放完后将自动跳转到哪一页去。著作工具的主界面就是围绕页的制作设计的，如图7-2所示：<br>
      <b><font color="#003399">　　 7-2 
      Ark的著作界面</font></b> <br>
      　　<img src="../../../../images/chatp/chap07/003.gif" width="363" height="264"> 
      <br>
      　　<font color="#003399">Ark的主要特点是</font><br>
      　　1. 运行于Windows95简体中文版，提供直观的可视化集成编辑环境，简单易学，非专业人员不用编程就可以制作多媒体演示系统。<br>
      　　2. 完善方便的项目管理，可以有效地管理大型多媒体演示系统的数据，极大地减轻了系统维护的负担，并可支持多个作者在分布式环境下同时编著演示系统。<br>
      　　3. 编辑功能完备强大，并有直观的时间轴窗口定义对象的进入退出时间。<br>
      　　4. 提供六种数据对象，可以处理文本、图形、图像、声音、视频、动画等数据类型，在数据处理上的特点有：文字、图形、图像这些静态对象可以定义丰富的进入、退出效果；图像对象以背景透明方式显示不规则形状的位图，还可以定义动画效果，使静止的演示画面活动起来；文字对象可以定义字幕效果；视频对象可以在任意尺寸和不规则窗口中显示。<br>
      　　5. 提供按钮和编辑框两种交互对象，有五种风格的按钮对象，可选的多种预定义动作，并可用内置的面向对象的ArkScript语言编写程序以定义复杂动作，此特点与时间轴窗口一起完美地实现了直观编辑与灵活控制的结合。<br>
      　　6. 强大的导航功能，提供导航图方便作者把握系统的整体结构，让用户直观选择要观看的内容，并提供书签等导航功能。<br>
    </td>
  </tr>
</table>
</body>
</html>
