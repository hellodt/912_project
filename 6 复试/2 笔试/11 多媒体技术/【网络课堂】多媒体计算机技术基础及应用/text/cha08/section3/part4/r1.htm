<html>
<head>
<title>Untitled Document</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../../css/text.css" type="text/css">
</head>

<body bgcolor="#FFFFFF" text="#000000">
<table width="100%" border="0" cellspacing="3" cellpadding="3">
  <tr> 
    <td class="text">　　<b><font color="#003399">一．交互式电视机顶盒的功能</font></b><a name="01"></a><br>
      　　<font color="#003399">1．概述</font><br>
      　　机顶盒STB（Set-top Box）是消费电子（consumer electronics）领域内的一个名词，它指的是一种与电视机接口，并提供附加服务的设备。目前所谓的机顶盒有四种类型：传统的机顶盒通过电缆接收数据，第二种类型使用电话线，第三种类型应用于DBS（Direct-Broadcast 
      Satellite）服务，第四种机顶盒就是一个Video-CD播放器。我们这里所说的机顶盒主要指前两种。<br>
      　　（1） 机顶盒的产生和发展<br>
      　　最初，机顶盒的引进是为了弥补电视调谐器能力的不足。如果调谐器屏蔽不够好，无线广播的电视信号将混入电缆传输的有线电视信号中，影响图像质量。于是出现了一个类似于黑盒子的设备，用它接收电缆信号，进行外差振荡，把信号的频率移到广播所不占用的频带上。这便是最早的机顶盒。 
      <br>
      　　第二代机顶盒增加了可编址的能力，即每个机顶盒对于视频服务器具有唯一的地址。这样，用户从有线电视广播的信号中选择与自己地址相匹配的数据接收。通过这种方法，视频服务器可以对用户有选择地发送视频信号。<br>
      　　目前的机顶盒已进入了交互式的一代，它无论在解码能力、显示效果还是交互性方面，都远远超过了前两代。<br>
      　　（2） 机顶盒的分类<br>
      　　根据不同的分析角度，机顶盒可以有以下几种分类方法：<br>
      　　① 模拟型机顶盒和数字型机顶盒<br>
      　　模拟型机顶盒接收和处理模拟信号。这意味着数据解码和数/模转换的功能需要在传输之前由视频服务器进行。另外，对网络的传输能力也有很大的要求。<br>
      　　数字型机顶盒所接收的信号是压缩数字视频信号。因此，机顶盒本身需要具有解压缩和模拟电视信号编码的能力，其价格要大大高于模拟型机顶盒。<br>
      　　采用模拟型机顶盒的系统把费用由机顶盒转向了服务器，由于机顶盒的数量很多，所以系统整体的价格降低了。但是，服务器解码的能力有限，所以限制了用户的数量。目前的交互式电视系统使用的基本上是数字型机顶盒。<br>
      　　② 非智能型机顶盒和智能型机顶盒<br>
      　　非智能型机顶盒对于用户的交互请求，只负责将其传送到服务器，所有交互服务的处理都在服务器中完成。由于服务器具有大容量的虚存（物理磁盘），应用程序的开发可以按照常规的方式进行。<br>
      　　智能型机顶盒本身执行一部分应用程序，对于高度交互的服务（如交互式视频游戏）可以提供立即的响应。智能型机顶盒需要大容量的内存和较高的处理能力。<br>
      　　关于机顶盒引入智能的问题，有一种看法（见95Computer Graphics关于机顶盒的一个讨论会的记录）认为，机顶盒中重要的是具有一个良好的界面，而智能化的问题应留给计算机来解决。<br>
      　　③ 基于计算机的机顶盒和基于电视的机顶盒<br>
      　　机顶盒的设计可以基于一台工作站或PC的硬件，并在计算机的屏幕上进行输出；也可以单独设计硬件，连接到电视机上，并用遥控器进行控制。<br>
      　　但是两种类型的机顶盒今后几年内不可能完全融合，因为电视和计算机在使用上具有以下几点基本差异：<br>
      　　l 电视一般具有很大的屏幕，而同样大小屏幕的监视器对计算机来说十分昂贵。<br>
      　　l 电视在收看时习惯上是被动的，而计算机的使用具有高度的交互性。<br>
      　　l 电视很容易使用，而计算机具有复杂的界面，需要经过专门学习。<br>
      　　l 电视只需要用遥控器控制，而计算机带有许多接口设备，如键盘、鼠标、游戏杆等。<br>
      　　l 电视在观看时一般距离很远，所以显示的文字信息很少，而计算机一般离得很近，显示大量的细节信息。<br>
      　　l 电视的使用主要是为了娱乐，而计算机主要用来提供信息、办理业务等。<br>
      　　所以，选用哪种类型的机顶盒需要根据系统提供的主要类型而定。<br>
      　　<font color="#003399">2．机顶盒的功能和设计目标</font><br>
      　　机顶盒作为用户前端设备，它是用户控制交互式电视的接口。所以除了能够提供一定质量的音频与视频输出之外，还应该完全支持系统交互。<br>
      　　（1） 机顶盒的功能需求<br>
      　　一个交互式电视机顶盒，应该具有以下几项功能：<br>
      　　① 提供与网络的接口<br>
      　　这是机顶盒的一个最基本的功能。机顶盒从网络中选择所需信息，并把用户的命令经过返回通道送给服务器。<br>
      　　② 音频与视频的解码<br>
      　　机顶盒需要能够提供高质量的视频和音频输出。用户希望视频质量能够达到广播级：NTSC格式的分辨率为720×486，而HDTV格式则需要1，920×1，080。此外，用户希望能提供CD质量的音频，即以44.1kHz或更高的速率对每个声道进行16位采样。<br>
      　　③ 用户界面和图形控制<br>
      　　提供一个友好的界面，使用户更容易地使用。机顶盒应该具有电子节目导游EPG（Electronic Program Guide）功能，通过交互选择，使用户方便地从众多服务中挑选自己所需要的。<br>
      　　④ 外围设备控制<br>
      　　最普通的外围控制设备是红外线遥控器。为了支持视频游戏，机顶盒可以连接游戏操纵杆。此外，机顶盒还可以连接CD-ROM、录像机、打印机、键盘等，提供更多的功能。<br>
      　　⑤ 安全与权限管理<br>
      　　安全与权限管理是机顶盒与一般计算机的一个关键区别。与一般计算机所不同的是，机顶盒的基本功能是提供付费服务，这保证了视频提供者获得一定的报酬，并对用户合理地收费。<br>
      　　机顶盒还可以包括其他扩展功能。这些功能可以通过可选件的形式实现，由用户根据需要，选择购买和使用。<br>
      　　（2） 机顶盒结构的设计目标<br>
      　　由于机顶盒的设计与网络基础设施的建设密切相关，所以在考虑机顶盒结构的设计目标时，应注意以下几个方面： <br>
      　　① 长期的使用：机顶盒设计时必需考虑能使用8年以上；<br>
      　　② 廉价：支持低廉的价格和一个最小的功能集合；<br>
      　　③ 可扩展性：很容易增添新的部件，提供新的服务；<br>
      　　④ 兼容性：与多种服务网络的软硬件平台相适应；<br>
      　　⑤ 数据独立性：与数据类型无关，以便支持将来出现的新的服务类型。<br>
      　　总之，机顶盒的设计必须体现开放性原则，使机顶盒并不停留于现有技术水平上，从而提供了最大的灵活性和最多的功能。<br>
      <br>
      　　 <b><font color="#003399">二、机顶盒的硬件结构设计</font></b><a name="02"></a><br>
      　　机顶盒的硬件结构设计有两种不同的模型。硬件处理模型中，每种功能由相应的专用硬件模块完成，如MPEG解码芯片完成MPEG数据解压缩等；软件处理模型中以高速处理器为基础，具有大容量的内存，用软件完成各种相应的功能。后一种方法提供了更大的灵活性，有可能成为将来的发展方向。但目前由于费用过高，其实现有待于半导体工业的进一步发展。<br>
      　　目前的交互式电视机顶盒基本上采用硬件处理模型。图8.30给出了一个开放式机顶盒的硬件设计结构。<br>
      <b><font color="#003399">　　 8.30 
      机顶盒的硬件结构</font></b> <br>
      　　<img src="../../../../images/chatp/chap08/033.gif" width="313" height="199"><br>
      　　<font color="#003399">1.系统控制子系统</font><br>
      　　系统控制子系统中运行着一个实时操作系统，用以管理机顶盒的活动和资源。系统ROM中包含有自举代码和基本的操作系统服务程序，RAM则由操作系统、应用服务程序和数据所共享。<br>
      　　目前有不少CPU可以用于机顶盒的控制系统。其中使用最多的是Motorola68000系列微处理器。该处理器支持DAVID（Digital Audio/Video 
      Interactive Decoder，数字音频视频交互式解码器）API标准，具有较好的性能指标。还有一些系统使用的是Power PC。Power 
      PC在外围设备控制和通信方面的性能和集成度都比68000要强。Philips公司1996年在国际市场上推出了Trimedia芯片，将视频和音频的输入输出部件、编码/译码协处理器（可支持MPEG-1和MPEG-2标准）和图像协处理器与CPU做在同一个芯片上，具有多种多媒体操作功能，对机顶盒的设计可以提供强有力的支持。<br>
      　　<font color="#003399">2.视频控制子系统</font><br>
      　　视频控制子系统对压缩视频流进行解码。目前视频的压缩基本上采用的是MPEG（Motion Pictures Experts Group，运动图像专家组）标准。MPEG-1使用1.5Mbps的数据率达到略高于VHS的质量（352×240的分辨率）。MPEG-2在数据率为3~10Mbps时可以达到CCIR-601的质量，若提高到60Mbps则适用于HDTV。MPEG解码的实现需要有强大的硬件处理能力。许多公司都宣布了支持MPEG-2的解码芯片，包括：C-Cube，Philips，AT&amp;T，LSILogic，IBM和SGS 
      Tomson等。<br>
      　　其他的编码方法，如分形（fractal）、小波（wavelet）等也开始用于视频压缩。因此机顶盒的视频控制子系统应该具有一个开放的结构，以支持不同的压缩标准。一个典型的解决方法是采用微码-RISC结构。RISC处理器支持解码所需的基本操作，并通过装入不同的微码，完成不同的解压缩算法。IIT公司推出的VCP芯片就属于这种结构。<br>
      　　随着微处理器功能的提高，解码工作将完全由软件实现。机顶盒在解码前，只需根据视频流的不同压缩标准，从服务器中下载不同的解码程序。这样便可以适应各种类型的编码视频流。 
      <br>
      　　<font color="#003399">3.音频控制子系统</font><br>
      　　音频控制子系统通过对音频数据流的解码，产生与视频同步的音频输出，或游戏及其他服务程序的背景音乐。作为可扩展的功能，音频子系统还可以用于实现高保真的音响服务。<br>
      　　音频控制子系统包括解码和合成两个部分。解码部分可以采用可编程DSP结构，用于广泛支持G711、G722、G728以及新的音频编码标准。音频和视频的解码硬件也可以结合在一起。<br>
      　　<font color="#003399">4.图形控制子系统</font><br>
      　　图形控制子系统产生菜单等服务程序所需的图形界面。此外，它还用于视频游戏等应用中二维或三维图形的加速显示。<br>
      　　机顶盒图形界面的要求由服务的种类和机顶盒的复杂程度决定。将来的服务类型对机顶盒的图形显示具有很高的要求，如32767种颜色、至少640×480的分辨率等，以支持各种复杂的界面。<br>
      　　图形控制子系统的输出，通过覆盖控制器与视频信号叠加到一起，经过编码，输出到普通的电视机上。<br>
      　　<font color="#003399">5.网络接口子系统</font><br>
      　　网络接口子系统将机顶盒连接到网络上，处理有关网络协议，接收输入信息流，并返回用户的控制命令。<br>
      　　ATM是应用于B-ISDN中的一个很热门的交换技术。将来许多机顶盒将通过ATM网络连接到视频服务器上。但是ATM论坛（ATM Forum）还未就机顶盒的应用提出一个物理接口标准。另外，ATM网络也有其缺点：接收信号不稳定，信元（cell）丢失等。<br>
      　　网络接口子系统中，可以采用可编程数字调谐器和调制解调器，用以适应不同电缆系统的结构特点。安全管理可以通过一个解密卡的形式，作为可选件，插在机顶盒的扩展槽上。<br>
      　　<font color="#003399">6.外围设备控制子系统</font><br>
      　　外围设备控制子系统使用户可以把多种外设连接到机顶盒上。其中，最基本的外设接口是红外线遥控制器。使用一种单键遥控器，可以获得类似鼠标的功能。<br>
      　　根据用户的需要，机顶盒还应该能提供更多的接口，如：游戏操纵杆、键盘、鼠标以及打印机、磁盘驱动器、CD-ROM、录像机等等。<br>
      　　随着半导体工业的发展，机顶盒的硬件结构将高度地集成化，主要功能将集中到4个芯片上：<br>
      　　・中央处理器：包括一个高性能的CPU、时钟和系统存储器；<br>
      　　・媒体处理器：包括视频、音频的解压缩器、图形加速器、显示控制器等；<br>
      　　・外设控制器：集成了外围设备控制的所有功能；<br>
      　　・网络通信芯片：包括所有的通信和网络接口功能，如调制与解调、加密与解密、权限管理等。<br>
      　　机顶盒硬件的高度集成，使其价格可以大幅度降低，但带来的一个问题是难以扩展和升级。当引入软件处理模型时，开放性问题才可能得到真正解决。<br>
      <br>
      　　<font color="#003399">机顶盒的硬件结构</font><br>
      <b><font color="#003399">　　 机顶盒的硬件结构图</font></b> 
      <br>
      　　<img src="../../../../images/chatp/chap08/034.gif"> <br>
      　<font color="#003399">　它由下述几部分组成：<br>
      　　(1) 系统控制子系统：系统控制子系统运行一个实时操作系统，用以管理机顶盒的运行及资源；<br>
      　　(2) 视频控制子系统：视频控制子系统主要功能是对传输流进行解复用和解码；<br>
      　　(3) 音频控制子系统：音频控制子系统通过对音频数据流的解码，产生与视频同步的音频输出，或游戏及其它服务程序的背景音乐，音频子系统还可以用于实现高保真的音响服务；<br>
      　　(4) 图形控制子系统：图形控制子系统产生菜单等服务程序所需的图形界面，它还可用于视频游戏等应用中二维和三维图形的加速显示，图形子系统的输出，通过覆盖控制器与视频信号叠加在一起，经过编码，输出到普通电视机上； 
      <br>
      　　(5) 网络接口子系统：网络接口子系统将机顶盒连接到网络上，处理有关网络协议，接收输入信息流，并返回用户的控制命令。可以采用编程数字调谐器和调制解调器，用以适应不同连接系统的结构特点。安全管理可以采用IC卡，作为可选件插在机顶盒的扩展槽上；<br>
      　　外围设备控制子系统：外围设备控制子系统可以使用户把多种外设连接到机顶盒上。其中，最基本的是红外线遥控器，此外还有：游戏操纵杆、键盘、鼠标、磁盘驱动器、CD-ROM、打印机、录象机等。</font><br>
      <br>
      　　<b><font color="#003399">三、机顶盒的软件结构设计</font></b><a name="03"></a><br>
      　　机顶盒的软件设计可以采用一个层次型的结构，其优点在于使底层的硬件对上层软件透明，增加和替换硬件不用修改高层的软件，上层软件修改时不必了解硬件的结构。这样升级和扩展起来十分方便。图8.31给出了一个机顶盒软件结构的分层模型。<br>
      <b><font color="#003399">　　 8.31 
      机顶盒的软件结构</font></b><br>
      　　<img src="../../../../images/chatp/chap08/035.gif" height="141"><br>
      　　<font color="#003399">1.硬件抽象层</font><br>
      　　硬件抽象层提供了一个硬件设备的底层接口，程序员可以通过它来访问和控制视频、音频、图形、网络等子系统。这个接口类似于PC机中的BIOS。硬件抽象层将所有硬件特性，如寄存器、内存映射等都屏蔽起来，其作用为：使上层软件不必修改即可与新的硬件相兼容。引入硬件抽象层的一个缺点是降低了运行速度，如基于显示无关的标准图形库显示速度慢、效率低。所以在一些机顶盒的软件结构设计中，为了提高速度，操作系统中的某些函数原形不经过硬件抽象层，直接在硬件中处理。<br>
      　　<font color="#003399">2.实时操作系统</font><br>
      　　实时操作系统用于管理机顶盒的资源，包括：内存、传输通道、网络带宽和外设访问等，并控制各应用服务程序的运行。<br>
      　　一个机顶盒的操作系统应该具有以下几个特点：<br>
      　　(1) 支持实时的操作能力和多任务的控制；<br>
      　　(2) 为用户提供一个易于使用的界面，并为程序开发者提供一个面向对象、事件驱动的环境；<br>
      　　(3) 为用于交互的数据链接提供一个综合的接口。一个解决的办法是，操作系统支持所有数据通信的底层协议，并建立一个数据库对交互的数据进行存储和调度。应用程序通过数据库进行数据输入和输出，数据链接的实现与应用程序无关；<br>
      　　(4) 提供控制内部和外部音频、视频设备的能力。<br>
      　　Microware公司开发了一个可用于机顶盒的操作系统DAVID（Digital Audio/Video Interactive Decoder，数字音频视频交互式解码器）。DAVID是一个实时多任务操作系统，特别适用于交互式电视数字娱乐终端。DAVID具有如下的层次结构：顶层是一系列DAVID的API接口，中间为OS-9模块化内核，底层是6个核心的I/O控制。目前，Motorola 
      68000、Power PC都可以支持DAVID操作系统。NEC的机顶盒BAX2000STB采用的就是DAVID操作系统。<br>
      　　<font color="#003399">3.库和驱动程序</font><br>
      　　库和驱动程序为上层的应用程序提供常用的服务功能。这些功能包括：网络接口管理、视频显示、图形和用户界面的控制等。<br>
      　　<font color="#003399">4.应用服务程序</font><br>
      　　应用服务程序位于软件层次结构的最顶层。不同的应用程序可以提供不同类型的交互式电视服务。<br>
      　　硬件抽象层和自举程序位于机顶盒的系统ROM中，操作系统和应用程序等在开机和选用时，从服务器或本地的硬盘中下载到系统RAM中。<br>
      <b><font color="#003399">　　</font></b><br>
      　　<b><font color="#003399">四、机顶盒的标准和将来</font></b><a name="04"></a><br>
      　　<font color="#003399">1.机顶盒的标准化问题</font><br>
      　　在机顶盒的设计中，关键的一个问题是标准化。由于机顶盒的设计，涉及到网络通信、视频和音频解码、图形显示等许多问题，因此不少标准化组织都已涉足于制定有关机顶盒标准的问题。<br>
      　　数字音频视频委员会DAVIC（Digital Audio-Visual Council）成立于1994年，旨在促进全球多媒体系统服务的互操作性（Interoperability）。DAVIC为了推进机顶盒的标准化，成立了五个技术委员会：<br>
      　　・机顶部件委员会（Set-top Unit Committee）：定义参考的机顶盒及其功能；<br>
      　　・服务器委员会（Server Committee）：定义视频服务器的接口； <br>
      　　・网络委员会（Network Committee）：定义传输系统参考模型，指定网络传输方法；<br>
      　　・系统和应用委员会（Systems and Applications Committee）：处理整体系统和服务问题；<br>
      　　・技术委员会（Technology Committee）：使DAVIC与其他的技术和标准化组织保持同步发展。<br>
      　　视频电子标准协会VESA（Video Electronics Standards Association）下设了一个VESA开放式机顶盒VOST（VESA 
      Open Set Top）兴趣小组，正在推荐一个机顶盒的标准结构。<br>
      　　其他一些组织的工作也涉及到机顶盒的标准化问题，如：<br>
      　　・数字视频广播（Digital Video Broadcasting）； <br>
      　　・ATM（异步传输模式）论坛（Asynchronous Transfer Mode Forum）；<br>
      　　・运动图像专家组（Motion Pictures Experts Group）；<br>
      　　・数字存储介质命令和控制委员会（Digital Storage Media Command and Control）；<br>
      　　・多媒体和超媒体专家组（Multimedia and Hypermedia Experts Group）。<br>
      　　<font color="#003399">2.将来的机顶盒</font><br>
      　　由于数字信号拥有模拟信号无法相比的优点，将来的传输信号、视频信号等都将是数字信号，机顶盒也将是全数字式的。<br>
      　　将来的机顶盒的硬件结构将与目前大不相同，高速的微处理器将代替几乎所有的功能模块，存储系统将在机顶盒中占有很重要的地位。考虑到价格的因素，用户可以根据所需的性能要求和服务种类选择内存的大小。<br>
      　　最终的机顶盒结构将取决于处理器的能力和人们对机顶盒性能的要求。<br>
    </td>
  </tr>
</table>
</body>
</html>
