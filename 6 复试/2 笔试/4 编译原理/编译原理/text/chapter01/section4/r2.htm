<html>
<head>
<title>编译原理</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../img/index/bg1.gif);
background-position: right;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>

</head>

<body bgcolor="#FFFFFF" text="#000000" >
<table width="100%" border="0" cellspacing="0" cellpadding="0" class=text>
  <tr>
    <td> 　　1、<b>语言的结构化编辑器</b> 结构化编辑器是引导用户在语言的语法制导下编制程序，能自动地提供关键字和与其匹配的关键字，如if后必须有then，begin和end的配对，左右括号的配对等，这样可以减少语法上的错误，可加快对源程序的调试，提高效率和质量。<br>
      <br>
      　　2、<b>语言程序的调试工具</b> 调试是软件开发过程中一个重要环节，结构化编辑器只能解决语法错误的问题，而对一个已通过编译的程序来说，需进一步了解的是程序执行的结果与编程人员的意图是否一致，程序的执行是否实现预计的算法和功能。这种对算法的错误或程序没能反应算法的功能等错误就需用调试器来协助解决。调试器的功能愈强，实现愈复杂，但它必须与语法分析、语义处理有紧密联系。 
      <br>
      <br>
      　　3、<b>语言程序测试工具</b> 语言程序的测试工具有两种：<b>静态分析器和动态测试器</b><br>
      　　静态分析器是对源程序进行静态地分析。它对源程序进行语法分析并制定相应表格，检查变量定值与引用的关系。如某变量未被赋值就被引用，或定值后未被引用，或多余的源代码等一些编译程序的语法分析发现不了的错误。动态测试工具是在源程序的适当位置插入某些信息，并用测试用例记录(显示语句或函数)程序运行时的实际路径。将运行结果与期望的结果进行比较分析，帮助编程人员查找问题。这种测试工具在国内已有开发，如FORTRAN语言和C语言的测试工具。<br>
      <br>
      　　4、<b>高级语言之间的转换工具</b> 由于计算机硬件的不断更新换代，更新更好的程序设计语言的推出为提高计算机的使用效率提供了良好条件，然而一些已有的非常成熟的软件如何在新机器新语言情况下使用呢?为了减少重新编制程序所耗费的人力和时间，就要解决如何把一种高级语言转换成另一种高级语言，乃至汇编语言转换成高级语言的问题。这种转换工作要对被转换的语言进行词法和语法分析，只不过生成的目标语言是另一种高级语言而已。这与实现一个完整的编译程序相比工作量要少些。在国内已研制出C，PASCAL，FORTRAN到Ada的翻译器和IBM 
      4700汇编到C的转换器，其效果很好。近年来,由于JAVA语言的发展,国内外也已研制出不少其他语言到JAVA的转换系统,如c到JAVA的转换系统,cobol到JAVA的转换系统等等. 
    </td>
  </tr>
</table>
</body>
</html>
