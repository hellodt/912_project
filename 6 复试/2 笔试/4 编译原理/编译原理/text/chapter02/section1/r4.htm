<html>
<head>
<title>编译原理</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../img/index/bg1.gif);
background-position: right;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>

</head>

<body bgcolor="#FFFFFF" text="#000000" >
<table width="100%" border="0" cellspacing="0" cellpadding="0" class=text>
  <tr>
    <td> 如：{*}表示*重复任意次，{*}<sup>3</sup><sub>8</sub>表示*重复3-8次。<br>
      　　[ ] ：方括号表示其内的成分为任选项。<br>
      　　( ) ：表示圆括号内的成分优先。<br>
      <br>
      例：用EBNF描述&lt;整数&gt;文法的定义 ：<br>
      　　&lt;整数&gt;∷=[+|-]&lt;数字&gt;{&lt;数字&gt;}<br>
      　　&lt;数字&gt;∷=0|1|2|3|4|5|6|7|8|9<br>
      　　或更好的写法<br>
      　　&lt;整数&gt;∷=[+|-]&lt;非零数字&gt;{&lt;数字&gt;}|0<br>
      　　&lt;非零数字&gt;∷=1|2|3|4|5|6|7|8|9 <br>
      　　&lt;数字&gt;∷=0|&lt;非零数字&gt; <br>
      <br>
      <b>PL/0语言文法的EBNF表示为：</b><br>
      　　〈程序〉∷=〈分程序〉．<br>
      　　〈分程序〉∷=[〈常量说明部分〉][〈变量说明部分〉][〈过程说明部分〉]〈语句〉<br>
      　　〈常量说明部分〉∷=CONST〈常量定义〉 {，〈常量定义〉}；<br>
      　　〈常量定义〉∷=〈标识符〉=〈无符号整数〉<br>
      　　〈无符号整数〉∷=〈数字〉{〈数字〉}<br>
      　　〈变量说明部分〉∷=VAR〈标识符〉{，〈标识符〉}；<br>
      　　〈标识符〉∷=〈字母〉{〈字母〉|〈数字〉}<br>
      　　〈过程说明部分〉∷=〈过程首部〉〈分程序〉{；〈过程说明部分〉}；<br>
      　　〈过程首部〉∷=PROCEDURE〈标识符〉；<br>
      　　〈语句〉∷=〈赋值语句〉|〈条件语句〉|〈当型循环语句〉|<br>
      〈过程调用语句〉|〈读语句〉|〈写语句〉|〈复合语句〉|〈空〉<br>
      　　〈赋值语句〉∷=〈标识符〉∶=〈表达式〉<br>
      　　〈复合语句〉∷=BEGIN〈语句〉{；〈语句〉}END<br>
      　　〈条件〉∷=〈表达式〉〈关系运算符〉〈表达式〉|ODD〈表达式〉<br>
      　　〈表达式〉∷=[+|-]〈项〉{〈加法运算符〉〈项〉} <br>
      　　〈项〉∷=〈因子〉{〈乘法运算符〉〈因子〉}<br>
      　　〈因子〉∷=〈标识符〉|〈无符号整数〉|'('〈表达式〉')'<br>
      　　〈加法运算符〉∷=+|-<br>
      　　〈乘法运算符〉∷=*|/<br>
      　　〈关系运算符〉∷=#|=|＜|＜=|＞|＞=<br>
      　　〈条件语句〉∷=IF〈条件〉THEN〈语句〉<br>
      　　〈过程调用语句〉∷=CALL〈标识符〉<br>
      　　〈当型循环语句〉∷=WHILE〈条件〉DO〈语句〉<br>
      　　〈读语句〉∷=READ'('〈标识符〉{，〈标识符〉}')'<br>
      　　〈写语句〉∷=WRITE'('〈表达式〉{，〈表达式〉}')'<br>
      　　〈字母〉∷=a|b|…|X|Y|Z<br>
      　　〈数字〉∷=0|1|2|…|8|9<br>
      <br>
      　　用语法图描述语言的语法与EBNF描述相比较：<br>
      <b>语法图描述：</b> 直观，易读，易写。<br>
      <b>EBNF表示</b>：形式化强，易机器识别。<br>
      <br>
      　　无论用语法图或EBNF作为描述程序设计语言语法的工具，对描述的语法可以检查哪些符号序列是所给语言的合法程序，一个程序设计语言如C或JAVA，用户可用它写出成千上万个不同的程序，但C或JAVA它们各自的语法只有一个，这就使得无穷的句子集可用有穷的文法（语法）描述。</td>
  </tr>
</table>
</body>
</html>
