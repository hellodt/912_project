<html>
<head>
<title>编译原理</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../img/index/bg1.gif);
background-position: right;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>

</head>

<body bgcolor="#FFFFFF" text="#000000" >
<table width="100%" border="0" cellspacing="0" cellpadding="0" class=text>
  <tr>
    <td> 
      <hr size="1">
      【课前思考】 <br>
      　　◇ 回顾第一章介绍的编译过程，理解符号表在编译过程中的位置和作用。<br>
      　　◇ PL/0编译程序的符号表是怎样组织的？它都登录了名字的哪些属性信息？<br>
      　　◇ 程序设计语言中&quot;变量的作用域和可见性&quot;是什么含义？<br>
      　　◇ 高级语言语句的结构和低级语言结构的不同。<br>
      【学习目标】<br>
      　　符号表作为编译系统的重要设施，贯穿于文法分析、检查和语义处理的编译全过程。本章目的使学生深刻全面地了解符号表的地位和作用；掌握符号表的组织和管理方法；以及编译过程中符号表的操作活动过程。<br>
      【学习指南】<br>
      　　在编译程序中符号表用来存放源程序中出现的有关名字的属性信息，这些信息集中反映了名字的语义特征属性。符号表在编译全过程的地位和作用非常重要，是进行上下文合法性检查和语义处理及代码生成的依据。符号表总体结构的设计和实现是与源语言的复杂性（包括词法结构、语法结构的复杂性）有关，还与对于编译系统在时间效率和空间效率方面的要求有关。<br>
      【难重点】<br>
      　　◇ 符号表总体组织的选择原则。<br>
      　　◇ 变量的类型和存储类别等属性的重要性。<br>
      　　◇ 采用单表结构时,如何解决分程序构造中同名名字声明的可视性规则。采用分表结构适合哪种语言的编译系统。<br>
      【知识结构】<br>
      <img src="../../../img/chap09/9_1_1.gif" width="450" height="371"> <br>
      <hr size="1">
    </td>
  </tr>
</table>
</body>
</html>
