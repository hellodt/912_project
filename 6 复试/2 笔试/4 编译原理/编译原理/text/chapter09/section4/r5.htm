<html>
<head>
<title>编译原理</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../img/index/bg1.gif);
background-position: right;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>

</head>

<body bgcolor="#FFFFFF" text="#000000" >
<table width="100%" border="0" cellspacing="0" cellpadding="0" class=text>
  <tr>
    <td> 　<font color="#0000FF">　</font>图 9.24给出了与上述分程序结构的程序示例相应的分表结构组织。<font color="#0000FF"><br>
      </font>
      <table width="100%" border="0" cellspacing="0" cellpadding="0" class="text">
        <tr> 
          <td valign="top" align="center"><font color="#0000FF"> 图 9.24 分程序结构的分表组织</font></td>
        </tr>
        <tr>
          <td valign="top" align="center"><img src="../../../img/totle/p9_24.gif" width="388" height="219"></td>
        </tr>
      </table>
      　　在图9.23中第四层分程序的表达式a=b+c+d中a是第二层定义的float a,b是第一层定义的float b,c是第三层定义的float 
      c，d是第四层定义的float d。如果表达式a=b+c+d是在第二层中，则读者可试着确定其中a,b,c,d分别是哪一层的定义。<br>
      　　特别要注意的是对于并列的分程序，其相应的符号表不会同时存在。</td>
  </tr>
</table>
</body>
</html>
