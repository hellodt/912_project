<html>
<head>
<title>编译原理</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../img/index/text_r4_c2.gif);
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
</head>

<body bgcolor="#FFFFFF" text="#000000">
<table width="100%" border="0" cellspacing="0" cellpadding="0" class=text>
  <tr>
    <td>　　在本例中用一个句子归约过程的所有活前缀和可归前缀构造出的有限自动机，刚好也是识别整个文法的活前缀及可归前缀的有限自动机，这仅是一个特殊情况。<br>
      　　因此我们对任何一个上下文无关文法只要能构造出它的识别活前缀及可归前缀的有限自动机，就可以构造其状态转换表，也就可以构造相应的LR分析表。 但是对于任何一个复杂的文法它的可归前缀并不是如此简单就能计算出来，虽然目前可归前缀在理论上已有很严格的计算方法，但实现起来却很复杂，在实际中很难应用，对此本节不作介绍，我们仅在下节介绍一种由文法的产生式直接构造识别活前缀和可归前缀的有限自动机的实用方法。</td>
  </tr>
</table>
</body>
</html>
