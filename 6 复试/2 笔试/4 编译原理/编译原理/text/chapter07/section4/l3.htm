<html>
<head>
<title>编译原理</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../img/index/text_r4_c2.gif);
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
</head>

<body bgcolor="#FFFFFF" text="#000000">
<table width="100%" border="0" cellspacing="0" cellpadding="0" class=text>
  <tr>
    <td> <b>7.4.1 LR(1)项目集族的构造</b> <br>
      　　以S′→・S，#属于初始项目集中，把'#'号作为向前搜索符，表示活前缀为γ(若γ是有关S产生式的某一右部)要归约成S时，必须面临输入符为'#'号才行。因此对初始项目S′→・S，# 
      求闭包后再用转换函数逐步求出整个文法的LR(1)项目集族。具体构造步骤如下：<br>
      (1) 构造LR(1)项目集的闭包函数。<br>
      　　a) I 的任何项目都属于CLOSURE(I)<br>
      　　b) 若有项目[A→α・Bβ,a ]属于CLOSURE(I)，B→γ是文法中的产生式，β∈V<sup><font size="-2">*</font></sup>，b∈FIRST(βa)， 
      则[B→・γ,b]也属于CLOSURE(I)中。<br>
      　　c) 重复b)直到CLOSURE(I)不再增大为止。<br>
      (2) 转换函数的构造 <br>
      　　LR(1)转换函数的构造与LR(0)的相似，GO(I,X)＝CLOSURE(J)<br>
      　　其中I是LR(1)的项目集，X是文法符号：<br>
      　　J={任何形如[A→αX・β,a]的项目 | [A→α・Xβ,a]∈I} </td>
  </tr>
</table>
</body>
</html>
