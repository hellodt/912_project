<html>
<head>
<title>编译原理</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../img/index/bg1.gif);
background-position: right;
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>

</head>

<body bgcolor="#FFFFFF" text="#000000" >
<table width="100%" border="0" cellspacing="0" cellpadding="0" class=text>
  <tr>
    <td> 
      <table width="100%" border="0" cellspacing="0" cellpadding="0" class="text">
        <tr> 
          <td width="40"><img src="../../../img/label/icon_lt.gif" width="36" height="36" alt="例题"></td>
          <td><font color="#0000FF">例4.11</font></td>
        </tr>
        <tr> 
          <td width="35">&nbsp;</td>
          <td>文法G=(｛E｝,｛+,*,i,(,)｝,P,E)其中P为：<br>
            E→i　　E→E+E　　E→E*E　　E→(E)<br>
            　　这里的非终结符E表示一类算术表达式。i表示程序设计语言中的&quot;变量&quot;，该文法定义了(描述了)由变量，+，*,(和)组成的算术表达式的语法结构，即：<br>
            变量是算术表达式；<br>
            若E<sub><font size="-2">1</font></sub>和E<sub><font size="-2">2</font></sub>是算术表达式，则E<sub><font size="-2">1</font></sub>+ 
            E<sub><font size="-2">2</font></sub>，E<sub><font size="-2">1</font></sub>*E<sub><font size="-2">2</font></sub>和(E<sub><font size="-2">1</font></sub>)也是算术表达式。</td>
        </tr>
        <tr>
          <td width="35"><img src="../../../img/label/icon_lt.gif" width="36" height="36" alt="例题"></td>
          <td><font color="#0000FF">例4.12</font></td>
        </tr>
        <tr>
          <td width="35">&nbsp;</td>
          <td>描述语句的产生式：〈语句〉→〈条件语句〉|〈赋值语句〉|〈循环语句〉… <br>
            描述一种简单赋值语句的产生式为：〈赋值语句〉→i∶=E<br>
            描述条件语句的产生式：<br>
            〈条件语句〉→if〈条件〉then〈语句〉|if〈条件〉then〈语句〉else〈语句〉<br>
            因此我们关心上下文无关文法形成的语言的句子的分析和分析方法的研究。今后，对&quot;文法&quot;一词若无特别说明，则均指上下文无关文法。</td>
        </tr>
      </table>
      
    </td>
  </tr>
</table>
</body>
</html>
