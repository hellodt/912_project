<html>
<head>
<title>编译原理</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<link rel="stylesheet" href="../../../css/text.css" type="text/css">
<STYLE TYPE="text/css">
<!--
BODY {background-image:   url(../../../img/index/text_r4_c2.gif);
background-repeat: no-repeat;
background-attachment: fixed;
}
-->
</STYLE>
</head>

<body bgcolor="#FFFFFF" text="#000000">
<table width="100%" border="0" cellspacing="0" cellpadding="0" class=text>
  <tr>
    <td>　　由于一个编译程序的设计与实现，不仅要考虑源语言与目标语言，还要考虑实现该编译程序的书写语言，在60年代初，几乎所有的编译程序都是用机器语言或汇编语言书写，而这种低级语言书写的编译程序多为手工构造，可以加工细致，目标程序的效率高，但开发时间长，可读性差，不易调试，不易移植，可维护性和可扩充性更差，可靠性也不高，可以说是效率极低。70年代开始逐步有不少编译程序是用高级语言编写，进而又不断推出编译程序的构造工具，这些技术的发展对编译程序的实现带来极大的方便，不仅缩短了开发周期，提高了开发效率，而且大大增加了可靠性、可移植性、可维护性和可扩充性。本章将介绍编译程序的自展技术、交叉编译、移植和一些编译程序开发工具的应用。 
      <br>
      <b>13.1 编译程序的书写语言与T型图<br>
      </b>　　一个编译程序涉及到三个方面的语言，即源语言、目标语言和编译程序的书写语言。为了描述方便通常用T型图来表示这三个方面的语言。T型图的左上角表示源语言，右上角表示目标语言，底部表示书写语言(实现语言)，如图13.1。 
    </td>
  </tr>
</table>
</body>
</html>
