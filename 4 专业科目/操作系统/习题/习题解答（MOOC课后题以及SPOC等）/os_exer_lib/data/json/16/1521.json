{
    "status":"ok",
    "knowledge":[
        ""
    ],
    "question":"1. 在x86保护模式下，`(---A---)`特权级是指当前活动进程的代码段的特权级，并且它定义了当前进程所执行程序的特权级别。`(---B---)`特权用于描述对应段所属的特权等级，也就是段本身真正的特权级。`(---C---)`特权级是指进程对段访问的请求权限。\n2. `(---D---)`特权级的值保存在CS段寄存器的最低两位；`(---E---)`特权级的值存储在段描述符中的权限位；`(---F---)`特权级的值保存在DS/FS等段寄存器的最低两位。\n3. 对数据段访问时的特权级控制遵循一个准则：只有相同或更高特权级的代码才能访问相应的数据段。即要求访问数据段的进程执行代码的`(---G---)`特权级的值小于等于待访问的数据段的`(---H---)`特权级的值，同时进程访问数据所需 的DS/FS等段寄存器的`(---I---)`特权级的值小于等于待访问的数据段等的`(---J---)`特权级的值。",
    "explain":"1.\nCPL：当前特权级。CPL就是当前活动代码段的特权级，并且它定义了当前所执行程序的特权级别\nDPL：描述符特权。用于描述对应段所属的特权等级，也就是段本身真正的特权级。\nRPL：请求特权级。RPL说明的是进程对段访问的请求权限，意思是当前进程想要的请求权限。\n2.\nCPL保存在CS段寄存器（选择子）的最低两位\nDPL存储在段描述符中的权限位\nRPL保存在选择子的最低两位\n3.\nRPL的值由程序员自己来自由的设置，并不一定RPL>=CPL，但是当RPL<CPL时，实际起作用的就是CPL了，因为访问时的特权检查是判断：max(RPL,CPL)<=DPL是否成立，所以RPL可以看成是每次访问时的附加限制，RPL=0时附加限制最小，RPL=3时附加限制最大。\n\n对数据段和堆栈段访问时的特权级控制：\n\n要求访问数据段或堆栈段的程序的CPL≤待访问的数据段或堆栈段的DPL，同时选择子的RPL≤待访问的数据段或堆栈段的DPL，即程序访问数据段或堆栈段要遵循一个准则：只有相同或更高特权级的代码才能访问相应的数据段。",
    "degree_of_difficulty":1,
    "source":"2016春期中",
    "answer":"1.\nCPL：当前特权级。CPL就是当前活动代码段的特权级，并且它定义了当前所执行程序的特权级别\nDPL：描述符特权。用于描述对应段所属的特权等级，也就是段本身真正的特权级。\nRPL：请求特权级。RPL说明的是进程对段访问的请求权限，意思是当前进程想要的请求权限。\n2.\nCPL保存在CS段寄存器（选择子）的最低两位\nDPL存储在段描述符中的权限位\nRPL保存在选择子的最低两位\n3.\nRPL的值由程序员自己来自由的设置，并不一定RPL>=CPL，但是当RPL<CPL时，实际起作用的就是CPL了，因为访问时的特权检查是判断：max(RPL,CPL)<=DPL是否成立，所以RPL可以看成是每次访问时的附加限制，RPL=0时附加限制最小，RPL=3时附加限制最大。\n\n对数据段和堆栈段访问时的特权级控制：\n\n要求访问数据段或堆栈段的程序的CPL≤待访问的数据段或堆栈段的DPL，同时选择子的RPL≤待访问的数据段或堆栈段的DPL，即程序访问数据段或堆栈段要遵循一个准则：只有相同或更高特权级的代码才能访问相应的数据段。",
    "type":"fill_in_the_blank",
    "options":[
        "A._",
        "B._",
        "C._",
        "D._",
        "E._",
        "F._",
        "G._",
        "H._",
        "I._",
        "J._"
    ],
    "q_number":1521
}