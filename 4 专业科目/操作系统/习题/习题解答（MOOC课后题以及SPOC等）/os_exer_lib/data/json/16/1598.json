{
    "status":"ok",
    "knowledge":[
        "地址转换"
    ],
    "question":" 有一台假想的计算机，页大小（page size）为32 Bytes，支持32KB的虚拟地址空间（virtual address space）,有4KB的物理内存空间（physical memory），采用二级页表，一个页目录项（page directory entry ，PDE）大小为1 Byte,一个页表项（page-table entries PTEs）大小为1 Byte，1个页目录表大小为32 Bytes，1个页表大小为32 Bytes。页目录基址寄存器（page directory base register，PDBR）保存了页目录表的物理地址（按页对齐）。\nPTE格式（8 bit） :\n```\n  VALID | PFN6 ... PFN0\nPDE格式（8 bit） :\n  VALID | PT6 ... PT0\n其\nVALID==1表示，表示映射存在；VALID==0表示，表示映射不存在。\nPFN6..0:页帧号\nPT6..0:页表的物理基址>>5\n```\n在物理内存模拟数据文件中，给出了4KB物理内存空间的值，请回答下列问题：\n(1)描述假想计算机中MMU的地址转换流程(可以忽略TLB的相关处理)；\n\n(2)假定PDBR的内容为0X3C0(物理页面号为十进制的30)，判断下列虚地址是否有合法对应的物理内存，并给出对应的pde index, pde contents, pte index, pte contents。\n```\nVirtual Address 4a10:\nVirtual Address 1ebe:\nVirtual Address 135c:\n```\n\n(3)假定用C语言模拟实现MMU的地址转换流程(忽略TLB的相关处理)时，用全局变量char memory[4096]保存了所有物理内存单元的数据，全局变量int16 PDBR为页目录基址寄存器。请用C语言给出从虚拟地址到物理地址的转换函数char translate(int16 virtualAddr)。该函数的返回值约定为，返回0x81表示页目录项PDE无效，返回0x82表示页表项PTE无效，其他返回值表示物理地址。\n4KB的物理内存模拟数据文件：\n```\npage   0: 0d 0f 06 12 1d 0c 10 03 08 14 03 1b 1c 03 1d 0b 17 17 09 14 14 18 08 17 1d 14 10 03 0f 0a 16 15 \npage   1: 0e 0d 1b 19 0a 0c 12 1b 06 0c 02 13 00 1c 10 11 02 07 0e 1a 10 08 1e 14 10 06 09 1b 04 10 13 0b \npage   2: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage   3: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage   4: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage   5: 18 09 09 13 12 0f 1a 10 0a 01 11 0b 10 0a 00 01 04 02 1a 12 07 16 13 01 17 07 1e 04 08 07 1a 19 \npage   6: 02 09 07 18 0c 08 01 0d 13 14 1c 19 07 04 17 18 0f 19 11 08 05 00 13 1b 1c 0e 14 1c 19 12 0c 10 \npage   7: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage   8: 05 13 00 03 18 1b 1a 19 11 1b 15 11 0d 00 02 07 0e 03 1e 11 16 1b 07 1b 1d 08 03 18 1b 18 0c 12 \npage   9: 07 06 04 1e 1c 1c 11 03 0d 01 1c 08 08 1d 06 1c 09 14 03 1b 0c 0a 14 12 07 03 11 00 1b 0a 05 0a \npage  10: 19 00 11 0f 01 0d 1b 13 09 19 0b 1b 0c 02 1e 02 07 17 03 10 1a 12 0a 17 19 11 13 09 0c 1e 1e 00 \npage  11: 7f 7f 7f 7f 7f 7f ed 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  12: 06 1d 0d 13 09 0f 0b 0a 12 12 1c 15 1c 1a 1e 14 05 1a 1d 1c 11 16 06 19 11 08 01 1a 1e 02 18 0c \npage  13: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  14: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  15: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  16: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  17: 7f 7f b0 8c 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 96 \npage  18: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  19: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f f2 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  20: 04 13 1b 04 00 02 18 0c 0e 1e 12 08 15 00 08 15 05 01 10 0a 1e 03 18 0c 18 0d 14 0a 06 0e 18 0a \npage  21: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f c0 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  22: 1e 14 14 04 01 17 05 05 19 1b 01 1d 10 0b 03 0c 1e 08 04 04 03 0a 1c 02 05 1d 1e 1e 07 0a 1d 0f \npage  23: 14 13 05 1b 14 03 1c 04 0a 16 12 11 14 0e 09 05 02 16 17 10 16 0b 08 0b 1b 01 0f 07 17 0a 0a 0c \npage  24: 06 05 0c 05 00 03 05 0f 01 00 0d 0c 15 01 0c 0c 00 1d 06 02 0e 05 13 0a 03 01 16 08 18 0e 1c 09 \npage  25: 02 17 11 09 1b 1b 10 1e 19 17 09 00 15 16 0a 0e 11 07 15 11 0b 03 11 09 16 05 0c 06 0c 11 03 01 \npage  26: 7f ae 7f 7f 7f 8a 7f 7f 7f 7f 7f 7f c1 7f 7f 7f 7f 7f 7f f4 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  27: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  28: 18 06 05 17 05 1e 0e 1b 19 06 18 0c 06 01 15 11 09 19 06 0d 02 0a 1b 0f 04 07 13 08 1b 01 1a 13 \npage  29: 00 14 0f 06 11 0e 1d 1b 12 1b 1b 05 19 19 1e 17 0c 06 14 06 17 11 19 0b 09 1c 14 0b 11 0d 13 10 \npage  30: ba 7f fa be e2 c3 e0 e8 b5 bd c5 f1 7f a6 e9 95 7f cd a7 d3 93 aa fd 7f 9a 7f d2 f7 91 ab 7f 8b \npage  31: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  32: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  33: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  34: 13 0a 02 15 1e 12 00 00 02 05 01 01 14 1b 06 1e 0e 18 1c 1d 01 09 12 1d 02 09 1a 03 0c 0a 15 1c \npage  35: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  36: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  37: 1b 01 13 01 16 0a 1b 1e 0f 1e 09 02 12 00 06 0c 12 04 01 1a 09 1d 1b 0b 0e 10 13 12 11 13 1d 0f \npage  38: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f b6 7f 7f 7f 7f 7f dc 7f 7f 7f 7f 7f 7f \npage  39: 7f 7f 7f 97 7f 7f de 7f 7f 7f 7f 7f 7f 7f 7f 7f e6 d9 7f 7f 99 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  40: 00 0a 17 18 11 0e 10 0d 10 19 06 12 1c 1a 05 1d 1a 05 08 06 01 1e 0c 1b 03 00 1a 18 1e 15 10 17 \npage  41: 11 10 13 04 07 15 06 14 1d 0c 1d 13 1d 10 17 15 06 10 12 0e 14 1c 18 19 04 15 13 1d 00 05 1e 0b \npage  42: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 94 7f 7f 7f 7f 7f 7f 80 c7 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  43: b7 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f db 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  44: 0d 0c 1c 04 00 1d 1b 1e 0d 1d 1c 06 17 19 14 10 08 0a 07 02 12 08 19 01 1c 15 1c 1b 1b 11 00 17 \npage  45: 1a 03 08 03 03 18 16 05 05 0c 17 19 17 12 04 0c 06 10 11 06 07 18 00 18 1b 1d 0b 11 12 13 1e 15 \npage  46: 16 08 06 07 06 12 13 16 03 17 0e 0b 0f 0d 06 0c 14 16 1c 06 1b 18 16 1e 04 18 1b 03 12 1d 09 1a \npage  47: 13 02 00 19 08 07 1e 0e 19 0e 13 04 13 1a 10 16 14 01 17 12 09 00 1a 0e 16 1b 16 1c 0c 18 0d 1d \npage  48: 03 17 0d 17 18 1e 14 1b 11 02 1b 02 02 19 08 14 00 06 16 01 0f 1d 06 15 17 13 17 15 00 05 10 1e \npage  49: 19 09 08 1d 1d 09 0c 08 04 07 1e 02 07 06 02 10 17 19 13 19 00 08 1d 02 08 0e 08 10 01 07 1d 04 \npage  50: 0d 11 1e 10 18 09 16 12 17 1b 02 1d 12 08 0e 03 07 19 16 1a 05 03 0b 0f 16 09 16 12 08 18 02 12 \npage  51: 03 11 03 02 14 07 01 04 13 12 00 07 1d 06 11 0d 18 12 18 10 05 05 02 19 03 00 1d 06 1b 02 0e 06 \npage  52: 18 0d 17 0e 03 05 1a 0e 0b 0f 1a 0b 0b 0b 00 10 0e 0f 0d 0e 16 05 1e 03 1a 05 18 08 02 10 1a 1a \npage  53: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f ac 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  54: 1b 1d 0b 1b 18 08 0e 03 19 14 1b 18 14 16 11 03 12 00 04 18 01 02 03 1b 05 00 1a 03 1a 14 19 1d \npage  55: 04 06 19 0d 09 0d 1c 07 00 1d 09 0b 1e 08 02 1b 07 06 1d 07 1b 0a 09 06 10 11 0c 0f 09 19 1c 17 \npage  56: 04 12 0a 0f 0b 09 0b 12 1e 1d 1a 19 08 1e 08 03 0f 16 0a 14 08 1d 0e 0e 10 1b 1e 10 0d 13 02 0d \npage  57: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  58: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f e5 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  59: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  61: 7f 7f 7f 7f e1 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f ee 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  62: 7f 7f 7f 7f 7f 7f 7f ef 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f b4 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  63: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  64: 03 10 1c 1a 0f 0c 02 08 09 1d 03 1d 0e 0d 08 1d 05 11 0f 06 06 1e 18 16 1b 03 15 17 06 0e 1e 0a \npage  65: 0b 1a 17 0f 15 0d 18 07 10 12 0c 01 05 13 06 17 0f 1d 1a 16 0b 01 11 17 1c 06 04 1e 16 0f 16 04 \npage  66: 12 0b 1c 18 04 00 1d 0c 03 05 15 05 0b 14 0a 14 1d 18 13 13 09 13 14 12 0f 17 06 16 1e 01 07 1e \npage  67: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f d7 d4 7f 7f dd 7f 7f 7f 7f 7f 7f b1 7f 7f 7f 7f 7f 7f \npage  68: 06 09 09 1b 02 0c 1a 11 07 1e 03 04 00 0d 1a 08 08 18 02 00 14 02 10 04 12 1a 0e 08 13 15 01 07 \npage  69: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 86 7f 7f 7f 7f 7f \npage  70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  71: 0c 0e 12 00 09 16 08 0e 07 0b 14 17 1d 0e 06 0a 01 07 12 12 07 05 03 05 0f 07 1b 11 0a 0d 01 16 \npage  72: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  73: 10 12 08 00 00 0a 06 11 08 17 12 14 16 10 0d 09 01 18 0f 03 1c 12 13 0d 03 1e 05 0b 1e 03 0f 0e \npage  74: 02 13 00 1a 09 1c 1b 04 0c 04 17 02 02 03 1a 07 0a 0d 11 0c 1d 0a 0e 1a 07 05 19 09 1b 19 0b 0a \npage  75: 03 1a 0d 10 14 04 16 18 1a 08 07 05 1b 0d 0c 10 15 09 0a 17 18 09 02 1c 16 12 0c 1d 0d 06 03 0a \npage  76: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  77: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f ad 7f 7f af 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  78: 17 1b 0a 12 0d 03 19 12 19 06 10 0e 16 02 0a 0f 02 11 16 0d 14 12 06 0a 1e 0a 0d 02 06 05 1c 16 \npage  79: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  81: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  82: 7f 7f 7f 7f 7f 7f 7f 89 7f 88 7f 7f 7f 7f 7f 7f eb ce 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  83: 7f 7f 7f 7f 7f 7f 7f f9 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage  84: 0c 1d 12 0a 07 1a 0e 18 0a 06 10 19 05 18 1c 18 19 00 13 1a 01 08 08 10 0d 0e 18 00 01 03 03 02 \npage  85: 0c 10 12 13 0d 01 18 1a 0f 11 08 1b 15 06 19 1e 0a 1e 0e 05 16 0a 16 12 03 10 1a 0e 10 1a 0d 0f \npage  86: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  87: 1e 10 0c 0a 0e 18 0e 1d 04 09 10 0c 1a 19 1c 12 00 11 11 0f 08 15 1c 03 14 0b 0f 1b 1d 13 06 1c \npage  88: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  89: 01 1c 1a 1c 15 13 1e 08 09 03 05 18 02 17 0c 1b 17 15 1a 01 08 0b 0d 14 1b 16 1c 15 0b 0f 17 19 \npage  90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage  91: 19 1c 1a 0d 17 0f 03 01 02 06 04 0f 15 10 0d 14 09 0e 17 0c 05 1b 16 0b 0b 10 12 06 00 06 18 04 \npage  92: 1e 10 11 00 0c 11 00 13 13 01 13 0e 15 0a 15 16 00 01 14 1d 07 0e 12 09 0b 09 0b 12 09 0b 17 00 \npage  93: 19 11 1c 0b 0c 07 18 0e 08 05 16 12 16 0b 0f 04 16 00 0e 17 14 03 07 1a 13 1b 1b 0d 1b 16 0a 0b \npage  94: 06 18 07 05 0d 15 03 09 0a 19 0d 1a 05 0a 14 1b 0d 06 03 10 05 19 19 05 08 19 13 18 0a 04 09 18 \npage  95: 02 1c 00 1e 07 19 19 1d 0e 15 09 19 03 1b 12 01 1d 09 02 08 00 08 16 1e 13 1a 19 16 0b 07 04 10 \npage  96: c2 7f 7f 7f 7f 7f 7f 7f 9c 7f 7f 7f 7f 7f 7f 7f 7f a9 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f d5 7f cb 7f \npage  97: 08 06 16 19 14 06 16 10 0b 12 0d 14 17 1e 03 11 1d 14 11 1a 00 18 13 12 09 13 03 10 07 1c 18 0e \npage  98: 7f 7f 7f c4 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f a5 7f 7f 7f 7f 7f \npage  99: 01 1a 0b 1e 0b 06 11 1b 0d 1a 16 0b 09 0f 0c 0b 14 1b 12 04 06 0b 13 04 02 09 08 00 10 1c 10 16 \npage 100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage 101: 1b 0a 09 18 0d 1e 1a 1a 15 06 15 11 0e 11 09 06 1c 0b 03 1e 0f 14 0a 04 0a 19 08 1c 09 1b 05 0d \npage 102: 01 17 0f 16 03 17 1c 01 0a 11 19 07 05 07 13 17 0c 0b 0c 0a 0c 02 0f 1e 0c 17 04 15 17 14 10 0e \npage 103: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage 104: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f c9 7f 7f 7f 7f df 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f f6 7f a2 \npage 105: 7f 7f 85 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 98 7f 7f 7f 7f 7f 7f 7f ea \npage 106: 11 0e 16 1a 0c 16 1d 0e 07 07 16 14 1d 1a 07 05 08 05 15 1a 1b 07 1a 09 0d 16 02 02 19 09 0b 11 \npage 107: 1c 0d 15 03 1b 0b 0e 1b 08 05 19 12 02 00 0a 00 19 05 08 0c 0f 0d 13 14 0d 03 1e 15 02 0d 17 1e \npage 108: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage 109: 0f 09 09 0a 14 12 0b 05 0a 03 11 16 0b 02 05 0b 12 18 0b 18 13 0d 0b 0f 15 0d 15 0e 07 10 15 02 \npage 110: 12 16 00 17 14 0f 10 0e 05 10 01 0f 14 0d 11 1d 1b 04 18 13 01 0b 07 02 10 1c 0a 1a 15 04 1a 12 \npage 111: 0d 0a 05 07 1b 04 11 13 10 0f 0c 05 19 1b 11 07 1c 06 05 13 19 11 03 1e 04 0a 1e 18 17 02 1a 0c \npage 112: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage 113: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 9d 7f 7f 7f 7f 7f \npage 114: 02 17 1c 10 0d 16 05 08 06 12 09 07 15 1d 09 15 0c 1a 12 08 06 00 0e 0b 05 0b 09 18 04 1e 0e 12 \npage 115: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage 116: 01 0d 09 06 1b 06 19 1d 03 1c 0c 06 05 01 0f 0b 1a 19 01 0c 0c 05 07 08 15 0a 03 06 0d 11 07 15 \npage 117: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage 118: 0c 00 0e 00 15 1a 1c 01 14 09 0e 09 09 04 13 02 1d 01 1d 05 02 17 10 17 0f 13 02 14 0f 1d 00 02 \npage 119: 7f 7f 7f e3 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f fe \npage 120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage 121: 0e 14 12 13 0f 10 0f 19 05 18 09 1a 02 0f 0d 16 06 08 04 11 11 00 05 06 1d 0e 11 08 14 19 14 00 \npage 122: 7f 7f 7f 81 7f 7f 7f 7f 7f b3 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f ca 7f 7f 7f 7f 7f 7f 7f 7f 7f b8 7f \npage 123: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \npage 124: 1b 0b 05 09 0e 10 10 0b 1a 08 0e 1b 19 09 07 19 00 04 10 10 05 01 06 17 0e 1e 18 1e 01 05 00 0d \npage 125: 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f fc 7f 7f a8 7f b2 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f \npage 126: 10 0c 1d 1b 1d 0f 17 0c 1e 1c 09 1c 05 02 16 09 10 13 01 17 08 0d 0a 17 17 08 03 09 0c 02 04 17 \npage 127: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \nPDBR: 0X3C0 [This means the page directory is held in this page 30 (decimal)]\n```",
    "explain":"(1)6分（说明原理给3分，说明虚拟地址的三段划分宽度给3分）\n虚拟地址分成三段：页目录索引（5bit: D14~D10）、页表项索引（5bit: D9~D5）、页内偏移（5bit:D4~D0）\n页目录基址PDBR+页目录索引，得到页目录项地址；\n页目录项中二级页表的物理页号+页表项索引，得到二级页表项地址；\n(2)6分（三个小题，每个2分，序号和内容各占1分，全对给分，有错不给分）\nVirtual Address 135c:\n  --> pde index:0x4(001002,410)  pde contents:(0xe2(1110 00102): valid 1, pfn 0x62)\n    --> pte index:0x1a(110102,2610)  pte contents:( 0xa5(1010 01012): valid 1, pfn 0x25)\n      --> Translates to Physical Address 0x4bc --> Value: 11\nVirtual Address 4a10:\n  --> pde index:0x12(100102,1810)  pde contents:( 0xa7(1010 01112): valid 1, pfn 0x27)\n    --> pte index:0x10(100002,1610)  pte contents:( 0xe6(1110 01102): valid 1, pfn 0x66)\n      --> Translates to Physical Address 0xcd0 --> Value: 0c\nVirtual Address 1ebe:\n  --> pde index:0x7(001112,710)  pde contents:( 0xe8(1110 10002): valid 1, pfn 0x68)\n    --> pte index:0x15(101012,2110)  pte contents:( 0x7f(0111 11112): valid 0, pfn 0x7f)\n      --> Fault (page table entry not valid)\n\n(3)8分（序号获取占2分，页表项内容获取占4分，返回结果的判断占2分）\n#define PDE_MASK 0x7c # 0111 11 00 0000 0000\n#define PDE_SHIFT 10\n#define PTE_MASK 0x3e # 0000 00 11 1110 0000\n#define PTE_SHIFT 5\n#define PAGE_BITS 5\n#define VALID_BIT 0x80 # 1000 0000\n#define PFN_MASK 0x7f #0111 1111\n#define PDE_INVALID 0x81\n#define PTE_INVALID 0x82\n\nchar translate(int16 virtualAddr)\n{\n\tint16 pdeIndex = (virtualAddr & PDE_MASK) >> PDE_SHIFT;\n    int16 pdeAddr = (PDBR << OFFSET_SHIFT) | pdeIndex;\n    char pdeContent = memory[pdeAddr];\n\n    if (pdeContent & VALID_BIT == 0) {\n    \t\treturn PDE_INVALID;\n    } else {\n    \t\tchar ptePage = pdeContent & PFN_MASK;\n\t\tchar pteIndex = (virtualAddr & PTE_MASK) >> PTE_SHIFT;\n    \t\tint16 pteAddr = (ptePage << PAGE_BITS) | pteIndex;\n    \t\tchar pteContent = memory[pteAddr];\n\n    \t\tif (pteContent & VALID_BIT == 0) {\n    \t\t\treturn PTE_INVALID;\n    \t\t} else {\n    \t\t\tpageFN = pteContent & PFN_MASK;\n    \t\t}\n    }\n    return pageFN;\n}\n",
    "degree_of_difficulty":null,
    "source":"",
    "answer":"(1)6分（说明原理给3分，说明虚拟地址的三段划分宽度给3分）\n虚拟地址分成三段：页目录索引（5bit: D14~D10）、页表项索引（5bit: D9~D5）、页内偏移（5bit:D4~D0）\n页目录基址PDBR+页目录索引，得到页目录项地址；\n页目录项中二级页表的物理页号+页表项索引，得到二级页表项地址；\n(2)6分（三个小题，每个2分，序号和内容各占1分，全对给分，有错不给分）\nVirtual Address 135c:\n  --> pde index:0x4(001002,410)  pde contents:(0xe2(1110 00102): valid 1, pfn 0x62)\n    --> pte index:0x1a(110102,2610)  pte contents:( 0xa5(1010 01012): valid 1, pfn 0x25)\n      --> Translates to Physical Address 0x4bc --> Value: 11\nVirtual Address 4a10:\n  --> pde index:0x12(100102,1810)  pde contents:( 0xa7(1010 01112): valid 1, pfn 0x27)\n    --> pte index:0x10(100002,1610)  pte contents:( 0xe6(1110 01102): valid 1, pfn 0x66)\n      --> Translates to Physical Address 0xcd0 --> Value: 0c\nVirtual Address 1ebe:\n  --> pde index:0x7(001112,710)  pde contents:( 0xe8(1110 10002): valid 1, pfn 0x68)\n    --> pte index:0x15(101012,2110)  pte contents:( 0x7f(0111 11112): valid 0, pfn 0x7f)\n      --> Fault (page table entry not valid)\n\n(3)8分（序号获取占2分，页表项内容获取占4分，返回结果的判断占2分）\n#define PDE_MASK 0x7c # 0111 11 00 0000 0000\n#define PDE_SHIFT 10\n#define PTE_MASK 0x3e # 0000 00 11 1110 0000\n#define PTE_SHIFT 5\n#define PAGE_BITS 5\n#define VALID_BIT 0x80 # 1000 0000\n#define PFN_MASK 0x7f #0111 1111\n#define PDE_INVALID 0x81\n#define PTE_INVALID 0x82\n\nchar translate(int16 virtualAddr)\n{\n\tint16 pdeIndex = (virtualAddr & PDE_MASK) >> PDE_SHIFT;\n    int16 pdeAddr = (PDBR << OFFSET_SHIFT) | pdeIndex;\n    char pdeContent = memory[pdeAddr];\n\n    if (pdeContent & VALID_BIT == 0) {\n    \t\treturn PDE_INVALID;\n    } else {\n    \t\tchar ptePage = pdeContent & PFN_MASK;\n\t\tchar pteIndex = (virtualAddr & PTE_MASK) >> PTE_SHIFT;\n    \t\tint16 pteAddr = (ptePage << PAGE_BITS) | pteIndex;\n    \t\tchar pteContent = memory[pteAddr];\n\n    \t\tif (pteContent & VALID_BIT == 0) {\n    \t\t\treturn PTE_INVALID;\n    \t\t} else {\n    \t\t\tpageFN = pteContent & PFN_MASK;\n    \t\t}\n    }\n    return pageFN;\n}\n",
    "type":"question_answer",
    "q_number":1598
}