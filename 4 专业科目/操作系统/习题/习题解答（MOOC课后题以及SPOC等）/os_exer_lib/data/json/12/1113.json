{
    "status":"ok",
    "knowledge":[
        "实验环境准备实验"
    ],
    "degree_of_difficulty":1,
    "explain":"UNIX系统中,利用一个打开的共享文件来连接两个相互通信的进程,这个共享文 件叫管道.作为管道输入的发送进程,以字符流的形式将信息送入管道,而作为管道\n输出的接收进程,从管道中获取信息.管道通信机制要提供三方面的协调能力:(1)互 斥.当一个进程对管道进行读/写操作时,另一个进程必须等待.(2)\n同步.当写进程 把数据写入管道后便去睡眠等待,直到输出进程取走数据后唤醒它.若一次写入的数据\n超过缓冲区剩余空间的大小,当缓冲区满时,写进程必须阻塞,并唤醒读进程。(3)对 方是否存在.只有确定对方存在时,才能够进行通信.本题只需要考虑互斥,同步问\n题。由于只有一对进程访问管道,因此不需要设置互斥信号量,只要设置两个同步信号 量empty,full.分别表示管道可写和可读.\n    ```\n    begin\n    pipe:array[09] of kilobytes;\n    ts=10,length,in=0,out=0:integer;\n    empty,full:semaphore=1,0;\n    cobegin\n    process PipeWriter\n      begin\n      repeat\n      产生数据;\n      p(empty);\n      length = data length;\n      while(length>0 and ts>0)\n      begin\n       pipe[in] = data of 1KB;\n       in = (in+1) mod n;\n       ts = ts-1;\n       length = length - 1;\n      end\n      v(full);\n      end\n    process Consumer\n      begin\n      repeat;\n      p(full);\n      从缓冲区取出一件物品;\n      out = (out+1) mod n;\n      ts = ts +1;\n      v(empty);\n      end\n    coend\n    end\n    ```\n\n",
    "question":"在管道通信机制中,用信号量描述读进程和写进程访问管道文件的过程,假设管 道文件大小为10KB.\n",
    "source":"网络",
    "answer":"UNIX系统中,利用一个打开的共享文件来连接两个相互通信的进程,这个共享文 件叫管道.作为管道输入的发送进程,以字符流的形式将信息送入管道,而作为管道\n输出的接收进程,从管道中获取信息.管道通信机制要提供三方面的协调能力:(1)互 斥.当一个进程对管道进行读/写操作时,另一个进程必须等待.(2)\n同步.当写进程 把数据写入管道后便去睡眠等待,直到输出进程取走数据后唤醒它.若一次写入的数据\n超过缓冲区剩余空间的大小,当缓冲区满时,写进程必须阻塞,并唤醒读进程。(3)对 方是否存在.只有确定对方存在时,才能够进行通信.本题只需要考虑互斥,同步问\n题。由于只有一对进程访问管道,因此不需要设置互斥信号量,只要设置两个同步信号 量empty,full.分别表示管道可写和可读.\n    ```\n    begin\n    pipe:array[09] of kilobytes;\n    ts=10,length,in=0,out=0:integer;\n    empty,full:semaphore=1,0;\n    cobegin\n    process PipeWriter\n      begin\n      repeat\n      产生数据;\n      p(empty);\n      length = data length;\n      while(length>0 and ts>0)\n      begin\n       pipe[in] = data of 1KB;\n       in = (in+1) mod n;\n       ts = ts-1;\n       length = length - 1;\n      end\n      v(full);\n      end\n    process Consumer\n      begin\n      repeat;\n      p(full);\n      从缓冲区取出一件物品;\n      out = (out+1) mod n;\n      ts = ts +1;\n      v(empty);\n      end\n    coend\n    end\n    ```\n\n",
    "type":"question_answer",
    "q_number":1113
}