{
    "status":"ok",
    "knowledge":[
        "非连续内存分配"
    ],
    "degree_of_difficulty":1,
    "explain":"在CPU给出有效地址（逻辑地址）后，系统将有效地址分离为页号和页内地址。系统将页号与页表长度进行比较，如果页号大于页表寄存器中的页表长度，则访问越界，产生越\n界中断。 地址变换机构又自动地将页号送入高速缓存，确定所需要的页是否在快表中。若是，则直接读出该页所对应的物理块号，送入物理地址寄存器；与此同时，将有效地址\n（逻辑地址）寄存器中页内地址直接装入物理地址寄存器的块内地址字段中，这样便完成了从逻辑地址到物理地址的变换。 若在快表中未找到对应的页表项，则根据页表寄存器\n中的页表始址和页号计算出该页在页表项中的位置，通过查找页表，得到该页的物理块号，将此物理块号装入物理地址寄存器中，与有效地址寄存器中页内地址组合成物理地址；\n同时，把从页表中读出的页表项存入快表中的一个寄存器单元中，以取代一个旧的页表项。\n",
    "question":"\"试述在设有快表的分页存贮管理系统的地址变换机构和地址变换过程。\"\n",
    "source":"网络",
    "answer":"在CPU给出有效地址（逻辑地址）后，系统将有效地址分离为页号和页内地址。系统将页号与页表长度进行比较，如果页号大于页表寄存器中的页表长度，则访问越界，产生越\n界中断。 地址变换机构又自动地将页号送入高速缓存，确定所需要的页是否在快表中。若是，则直接读出该页所对应的物理块号，送入物理地址寄存器；与此同时，将有效地址\n（逻辑地址）寄存器中页内地址直接装入物理地址寄存器的块内地址字段中，这样便完成了从逻辑地址到物理地址的变换。 若在快表中未找到对应的页表项，则根据页表寄存器\n中的页表始址和页号计算出该页在页表项中的位置，通过查找页表，得到该页的物理块号，将此物理块号装入物理地址寄存器中，与有效地址寄存器中页内地址组合成物理地址；\n同时，把从页表中读出的页表项存入快表中的一个寄存器单元中，以取代一个旧的页表项。\n",
    "type":"question_answer",
    "q_number":980
}