{
    "status":"ok",
    "knowledge":[
        "进程状态与控制"
    ],
    "degree_of_difficulty":1,
    "explain":"功能：复制当前进程，生成一个子进程（2分），并从当前位置继续执行（2分）； 接口：没有输入，父进程返回子进程标识（2分）；子进程返回零（2分）； 输出：\n三次循环（3分）；i的值输出正确（2分）；x的值输出正确（2分）；父子进程标识正确（2分）； xyong@ubuntu:~/work$ ./a.out\nThis is process 13724; childpid = 13725; The parent of this process has id\n9917; i = 0; x = 5 This is process 13725; childpid = 0; The parent of this\nprocess has id 13724; i = 0; x = 5 This is process 13724; childpid = 13725;\nThe parent of this process has id 9917; i = 1; x = 6 This is process 13725;\nchildpid = 0; The parent of this process has id 13724; i = 1; x = 6 This is\nprocess 13724; childpid = 13725; The parent of this process has id 9917; i =\n2; x = 7 This is process 13725; childpid = 0; The parent of this process has\nid 13724; i = 2; x = 7 父子关系图：1分\n",
    "question":"\"描述int fork(void)系统调用的功能和接口，给出程序fork.c的输出结果，并用图示给出所有进程的父子关系。注：1）getpid()和getpp\nid()是两个系统调用，分别返回本进程标识和父进程标识。2）你可以假定每次新进程创建时生成的进程标识是顺序加1得到的；在进程标识为1000的命令解释程序sh\nell中启动该程序的执行。 #include  #include  / getpid() and fork() are system calls\ndeclared in unistd.h. They return / / values of type pid_t. This pid_t is a\nspecial type for process ids. / / It's equivalent to int. / int main(void)\n{ pid_t childpid; int x = 5; int i; childpid = fork(); for ( i = 0; i < 3;\ni++) { printf(\"This is process %d; childpid = %d; The parent of this process\nhas id %d; i = %d; x = %d\n\", getpid(), childpid, getppid(), i, x); sleep(1);\nx++; } return 0; }\"\n",
    "source":"网络",
    "answer":"功能：复制当前进程，生成一个子进程（2分），并从当前位置继续执行（2分）； 接口：没有输入，父进程返回子进程标识（2分）；子进程返回零（2分）； 输出：\n三次循环（3分）；i的值输出正确（2分）；x的值输出正确（2分）；父子进程标识正确（2分）； xyong@ubuntu:~/work$ ./a.out\nThis is process 13724; childpid = 13725; The parent of this process has id\n9917; i = 0; x = 5 This is process 13725; childpid = 0; The parent of this\nprocess has id 13724; i = 0; x = 5 This is process 13724; childpid = 13725;\nThe parent of this process has id 9917; i = 1; x = 6 This is process 13725;\nchildpid = 0; The parent of this process has id 13724; i = 1; x = 6 This is\nprocess 13724; childpid = 13725; The parent of this process has id 9917; i =\n2; x = 7 This is process 13725; childpid = 0; The parent of this process has\nid 13724; i = 2; x = 7 父子关系图：1分\n",
    "type":"question_answer",
    "q_number":1012
}