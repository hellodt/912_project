发信人: clockwise (给点阳光就灿烂), 信区: e_note
标  题: 2012.6.15数据结构判断选择题
发信站: 酒井BBS (Fri Jun 15 11:46:59 2012), 转信

先补充一句，请教了gao_young大神，最后一道大题解决死循环的计数，当计数到M/2-1的时候就可以判定查询失败了。可以自行证明。其实我不会证= =

判断和选择题应该比较难吧，而且很多填空题都很“恰好”，数字很贱。这里只写一些印象深刻的题，这些题比较难，想了很久（当然，是对我而言的）。以下整理的题不计次序。

判断：（一共10个，想不起来那么多了= =）

1.对于正权值有向图，如果把所有的边权都平方之后，Dijkstra算法得到的最短路径树方案不变。

2.在KMP匹配的过程中，当主程序运行到i,j的状态时，意味着之前至少做过i次成功匹配以及i-j次失败匹配。

3.一个向量的存在主流数，则该数必然是中位数以及频繁数。
（似乎AB卷里的另一个是：如果有某数既是中位数又是频繁数，则该数也是主流数）

4.字符集规模越大的时候，next表比BC表效果越好。

5.如果使用了线性复杂度的中位数选取算法，快速排序的复杂度可以保证在最坏情况下也渐进等于O(nlogn)。


选择：
1.将[1481,1992]区间内的整数逐一插入到空AVL树中，最后该AVL树的高度是：
A、7    B、8    C、9    D、10   E、以上都不对

2.将[23, 1481)区间内的整数组成一个2-3-B树，且根节点只有一个关键码，则最终该B-树的高度至少是
A、7    B、8    C、9    D、10   E、以上都不对

3.对红黑树进行插入操作时，进行双红修正，黑高度增加，则_____发生重染色，_____发生结构调整。
（两个空分别可以填入“必然”、“可能”、“必然不”，选项就是这三者的排列组合）

4.对以下各搜索树进行删除操作，哪些树可能会经过Omega(logn)次局部调整，其中n为关键码的数量。
A、AVL  B、伸展树       C、红黑树       D、B-树         E、都不会